name: Build and Deploy Angular Frontend to GCS

on:
  push:
    branches:
      - master # Or your main deployment branch

jobs:
  build-and-deploy:
    name: Build and Deploy to GCS
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write' # Required for google-github-actions/auth

    steps:
      - name: Checkout code
        uses: actions/checkout@v4 # Use a recent version

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20' # Or your specific Angular-compatible version
          cache: 'npm'

      - name: Install Dependencies
        run: npm ci # Use 'ci' for faster, more reliable installs in CI

      - name: Build Angular App for Production
        run: npm run build -- --configuration production

      - name: Authenticate to Google Cloud
        id: auth
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}' # Use the secret holding your Service Account key

      - name: Deploy Static Files to Google Cloud Storage
        id: deploy
        uses: 'google-github-actions/upload-cloud-storage@v2'
        with:
          path: 'dist/almonium-fe'
          destination: 'almonium-fe' # Your GCS bucket name
          parent: false # Upload contents of path, not the directory itself
          # Optional: Clean destination bucket before upload
          # cleanup: true
          # Optional: Gzip assets for potentially faster loading (browser must support)
          # gzip: true
          # Optional: Set cache control headers (e.g., 1 hour for assets)
          # headers: |-
          #   cache-control: public, max-age=3600

      # Optional Step: Invalidate Cloud CDN Cache if you enabled it on the backend bucket
      # This ensures users get the latest files immediately
      - name: Invalidate Cloud CDN Cache
        # Check if the previous step actually uploaded anything
        if: steps.deploy.outputs.uploaded == 'true'
        run: |-
          gcloud compute url-maps invalidate-cdn-cache almonium-fe-lb --path "/*" --async
          echo "Cloud CDN cache invalidation requested for almonium-fe-lb."
        # Note: Replace 'almonium-fe-lb' with the actual name of your Load Balancer

      - name: Deployment Summary
        run: echo "Successfully deployed to gs://almonium-fe/"
